# vim: set ft=yaml ts=2 expandtab:
---

name: CI

on:  # yamllint disable-line rule:truthy

  push:
    branches:
    - '**'
    tags-ignore:
    - '*'

  schedule:
    - cron: '40 11 * * 6'

jobs:

  SANITY:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

      matrix:
        python-version:
        - 2.7
        - 3.6
        - 3.7
        - 3.8
        - 3.9

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
      ANSIBLE_PYTHON_INTERPRETER: ${{ matrix.python-version }}/bin/python

    defaults:
      run:
        working-directory: ansible_collections/mafalb/scl

    steps:

    - name: checkout collection mafalb.scl
      uses: actions/checkout@v2
      with:
        path: ansible_collections/mafalb/scl

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: python version
      run: |
        python --version
        which python
        whereis python
        python3 --version
        which python3
        whereis python3
        ls -l /opt/hostedtoolcache/Python/

    - name: install mafalb.ansible
      if: false
      run: |
        ansible-galaxy collection install mafalb.ansible

    - name: install shellcheck
      run: sudo apt install shellcheck

    - name: install ansible for python 2.7
      if: ${{ matrix.python-version == '2.7' }}
      run: |
        pip install virtualenv
        virtualenv ~/virtualenv
        . ~/virtualenv/bin/activate
        pip install wheel
        pip install 'ansible<2.10' ansible-lint flake8 pylint

    - name: install ansible for python 3
      if: ${{ matrix.python-version != '2.7' }}
      run: |
        python -m venv ~/virtualenv
        . ~/virtualenv/bin/activate
        pip install wheel
        pip install ansible ansible-lint flake8 pylint

    - name: check ansible version
      run: |
        source ~/virtualenv/bin/activate
        ansible --version

    - name: check python version
      run: |
        source ~/virtualenv/bin/activate
        ansible --version | grep "^\s*python.* ${{ matrix.python-version }}"

    - name: lint
      run: |
        source ~/virtualenv/bin/activate
        . tests/lint.sh requirements ${{ matrix.python-version }}

  CI:

    runs-on: ubuntu-20.04

    strategy:

      fail-fast: false

      matrix:

        target:
        - fedora34
        - c8s
        - alma8
        - rocky8
        - centos7
        - centos8
        - ubuntu20

        ansible_version:
        - '2.9'
        - '2.10'
        - '2.11'

        include:

        - target: fedora34
          image: docker.io/fedora:34
          privileged: true

        - target: c8s
          image: quay.io/centos/centos:stream8

        - target: alma8
          image: quay.io/almalinux/almalinux:8

        - target: rocky8
          image: quay.io/rockylinux/rockylinux:8

        - target: centos7
          image: quay.io/centos/centos:7

        - target: centos8
          image: quay.io/centos/centos:8

        - target: ubuntu20
          image: docker.io/ubuntu:focal

    env:

      ANSIBLE_VERSION: ${{ matrix.ansible_version }}
      CI_IMAGE: ${{ matrix.image }}
      CI_HOSTNAME: ci-${{ matrix.target }}
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb/scl

    steps:

    - name: checkout collection mafalb.scl
      uses: actions/checkout@v2
      with:
        path: ansible_collections/mafalb/scl

    - name: install molecule
      run: |
        ansible-galaxy collection install mafalb.ansible
        ansible-playbook -e ansible_python_interpreter=python3 -D ~/.ansible/collections/ansible_collections/mafalb/ansible/playbooks/molecule.yml -e molecule_ansible_version=$ANSIBLE_VERSION -t all,debug

    - name: check ansible version
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        ansible --version | grep "^ansible.* ${{ matrix.ansible_version }}"

    - name: molecule tests
      run: |
        source ~/.virtualenvs/molecule/bin/activate
        molecule test

...
